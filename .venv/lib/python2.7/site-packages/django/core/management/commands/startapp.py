import os
from importlib import import_module
import django

from django.core.management.base import CommandError
from django.core.management.templates import TemplateCommand


class Command(TemplateCommand):

    template = os.path.join(django.__path__[0], "conf", "app_template")
    help = ("Creates a Django app directory structure for the given app "
            "name in the current directory or optionally in the given "
            "directory.")

    def handle(self, app_name=None, target=None, **options):
        self.validate_name(app_name, "app")


        # Use our default template if one isn't specified.
        if not options.get("template", None):
            options["template"] = self.template



        # We have html and js templates as well, so make sure those are included.
        options["extensions"].extend([".tmpl", ".html", ".js", ".md"])

        # Check that the app_name cannot be imported.
        try:
            import_module(app_name)
        except ImportError:
            pass
        else:
            raise CommandError("%r conflicts with the name of an existing "
                               "Python module and cannot be used as an app "
                               "name. Please try another name." % app_name)
        print "\n"
        print "#######################"
        print "Build app success!"
        print "Contact me if you got any questions, yang_sirone@163.com"
        print "Please kindly see readme for further information"
        print "Readme is stored in " + app_name + "/" + app_name + "readme"
        print "######################\n"

        super(Command, self).handle('app', app_name, target, **options)
